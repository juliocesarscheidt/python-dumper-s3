version: '3.4'

services:
  dumper-s3:
    container_name: dumper-s3
    hostname: dumper-s3
    image: dumper-s3:latest
    build:
      context: ./src/
    environment:
      ENV: dev
      MYSQL_HOST: ${MYSQL_HOST}
      MYSQL_PORT: ${MYSQL_PORT}
      MYSQL_USER: ${MYSQL_USER}
      MYSQL_PASS: ${MYSQL_PASS}
      MYSQL_DATABASE: ${MYSQL_DATABASE}
      MAX_TABLES: ${MAX_TABLES}
      PARALLEL_PROCESSES_NUM: ${PARALLEL_PROCESSES_NUM}
      CLEAN_FILES: ${CLEAN_FILES}
      BUCKET_NAME: ${BUCKET_NAME}
      AWS_ACCESS_KEY_ID: ${AWS_ACCESS_KEY_ID}
      AWS_SECRET_ACCESS_KEY: ${AWS_SECRET_ACCESS_KEY}
      AWS_DEFAULT_REGION: ${AWS_DEFAULT_REGION}
      S3_ENDPOINT_URL: ${S3_ENDPOINT_URL:-http://minio:9000}
    networks:
      - subnet_0
    restart: "no"
    volumes:
      - ./src/:/usr/src/app:rw

  mysql:
    container_name: mysql
    hostname: mysql
    image: mysql:5.7
    ports:
      - '3336:3306'
    environment:
      MYSQL_ROOT_HOST: "%"
      MYSQL_ROOT_PASSWORD: ${MYSQL_PASS}
      MYSQL_DATABASE: ${MYSQL_DATABASE}
      TZ: 'America/Sao_Paulo'
    networks:
      - subnet_0
    restart: on-failure
    volumes:
      - mysql-data:/var/lib/mysql
      - ./mysql/init.sql:/docker-entrypoint-initdb.d/init.sql

  minio:
    container_name: minio
    hostname: minio
    image: minio/minio:latest
    command: server /data --console-address ":9001"
    ports:
      - '9000:9000'
      - '9001:9001'
    environment:
      MINIO_ROOT_USER: ${AWS_ACCESS_KEY_ID}
      MINIO_ROOT_PASSWORD: ${AWS_SECRET_ACCESS_KEY}
      AWS_ACCESS_KEY_ID: ${AWS_ACCESS_KEY_ID}
      AWS_SECRET_ACCESS_KEY: ${AWS_SECRET_ACCESS_KEY}
      AWS_DEFAULT_REGION: ${AWS_DEFAULT_REGION}
    networks:
      - subnet_0
    volumes:
      - minio-data:/data

networks:
  subnet_0:
    driver: bridge

volumes:
  mysql-data: {}
  minio-data: {}

secrets: {}
